"""Script to add test data to the database."""

import asyncio
from dotenv import load_dotenv

from app.config import get_settings
from infrastructure.database.connection import init_database, _session_maker
from infrastructure.database.models import CategoryModel, MenuItemModel
from shared.utils.helpers import generate_id

load_dotenv()


async def add_test_data():
    """Add test categories and menu items."""
    settings = get_settings()
    
    # Initialize database
    await init_database(settings.database_url)
    
    async with _session_maker() as session:
        # Add categories
        categories_data = [
            {
                "name": "üçï –ü–∏—Ü—Ü–∞",
                "description": "–°–≤–µ–∂–∞—è –ø–∏—Ü—Ü–∞ –Ω–∞ —Ç–æ–Ω–∫–æ–º —Ç–µ—Å—Ç–µ",
                "image_url": None,
                "is_active": True
            },
            {
                "name": "üçî –ë—É—Ä–≥–µ—Ä—ã",
                "description": "–°–æ—á–Ω—ã–µ –±—É—Ä–≥–µ—Ä—ã —Å –º—è—Å–æ–º",
                "image_url": None,
                "is_active": True
            },
            {
                "name": "üçù –ü–∞—Å—Ç–∞",
                "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ø–∞—Å—Ç–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–æ—É—Å–∞–º–∏",
                "image_url": None,
                "is_active": True
            },
            {
                "name": "ü•§ –ù–∞–ø–∏—Ç–∫–∏",
                "description": "–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏",
                "image_url": None,
                "is_active": True
            }
        ]
        
        categories = []
        for cat_data in categories_data:
            category = CategoryModel(
                id=generate_id(),
                name=cat_data["name"],
                description=cat_data["description"],
                image_url=cat_data["image_url"],
                is_active=cat_data["is_active"]
            )
            session.add(category)
            categories.append(category)
        
        await session.commit()
        print("‚úÖ Categories added successfully")
        
        # Add menu items
        menu_items_data = [
            # –ü–∏—Ü—Ü–∞
            {
                "name": "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π",
                "price": 450,
                "category_id": categories[0].id,
                "ingredients": "–¢–µ—Å—Ç–æ, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫",
                "allergens": "–ì–ª—é—Ç–µ–Ω, –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "weight": "350–≥",
                "calories": 280,
                "image_url": None,
                "is_available": True
            },
            {
                "name": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
                "description": "–û—Å—Ç—Ä–∞—è –ø–∏—Ü—Ü–∞ —Å –∫–æ–ª–±–∞—Å–æ–π –ø–µ–ø–ø–µ—Ä–æ–Ω–∏",
                "price": 550,
                "category_id": categories[0].id,
                "ingredients": "–¢–µ—Å—Ç–æ, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏",
                "allergens": "–ì–ª—é—Ç–µ–Ω, –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "weight": "380–≥",
                "calories": 320,
                "image_url": None,
                "is_available": True
            },
            # –ë—É—Ä–≥–µ—Ä—ã
            {
                "name": "–ß–∏–∑–±—É—Ä–≥–µ—Ä",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±—É—Ä–≥–µ—Ä —Å —Å—ã—Ä–æ–º",
                "price": 350,
                "category_id": categories[1].id,
                "ingredients": "–ë—É–ª–æ—á–∫–∞, –∫–æ—Ç–ª–µ—Ç–∞, —Å—ã—Ä, —Å–∞–ª–∞—Ç, —Ç–æ–º–∞—Ç, –ª—É–∫",
                "allergens": "–ì–ª—é—Ç–µ–Ω, –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "weight": "250–≥",
                "calories": 450,
                "image_url": None,
                "is_available": True
            },
            {
                "name": "–ë–∏–≥ –ú–∞–∫",
                "description": "–ë–æ–ª—å—à–æ–π –±—É—Ä–≥–µ—Ä —Å –¥–≤–æ–π–Ω–æ–π –∫–æ—Ç–ª–µ—Ç–æ–π",
                "price": 450,
                "category_id": categories[1].id,
                "ingredients": "–ë—É–ª–æ—á–∫–∞, 2 –∫–æ—Ç–ª–µ—Ç—ã, —Å—ã—Ä, —Å–∞–ª–∞—Ç, —Ç–æ–º–∞—Ç, –ª—É–∫, —Å–æ—É—Å",
                "allergens": "–ì–ª—é—Ç–µ–Ω, –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "weight": "350–≥",
                "calories": 650,
                "image_url": None,
                "is_available": True
            },
            # –ü–∞—Å—Ç–∞
            {
                "name": "–ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
                "description": "–ü–∞—Å—Ç–∞ —Å –±–µ–∫–æ–Ω–æ–º –∏ —Å–ª–∏–≤–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º",
                "price": 400,
                "category_id": categories[2].id,
                "ingredients": "–°–ø–∞–≥–µ—Ç—Ç–∏, –±–µ–∫–æ–Ω, —è–π—Ü–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, —Å–ª–∏–≤–∫–∏",
                "allergens": "–ì–ª—é—Ç–µ–Ω, –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, —è–π—Ü–∞",
                "weight": "300–≥",
                "calories": 380,
                "image_url": None,
                "is_available": True
            },
            {
                "name": "–ë–æ–ª–æ–Ω—å–µ–∑–µ",
                "description": "–ü–∞—Å—Ç–∞ —Å –º—è—Å–Ω—ã–º —Å–æ—É—Å–æ–º",
                "price": 420,
                "category_id": categories[2].id,
                "ingredients": "–°–ø–∞–≥–µ—Ç—Ç–∏, —Ñ–∞—Ä—à, —Ç–æ–º–∞—Ç—ã, –ª—É–∫, –º–æ—Ä–∫–æ–≤—å",
                "allergens": "–ì–ª—é—Ç–µ–Ω",
                "weight": "320–≥",
                "calories": 400,
                "image_url": None,
                "is_available": True
            },
            # –ù–∞–ø–∏—Ç–∫–∏
            {
                "name": "–ö–æ–∫–∞-–ö–æ–ª–∞",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≥–∞–∑–∏—Ä–æ–≤–∫–∞",
                "price": 120,
                "category_id": categories[3].id,
                "ingredients": "–í–æ–¥–∞, —Å–∞—Ö–∞—Ä, –∫–æ—Ñ–µ–∏–Ω, –∞—Ä–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä—ã",
                "allergens": "–ù–µ—Ç",
                "weight": "330–º–ª",
                "calories": 140,
                "image_url": None,
                "is_available": True
            },
            {
                "name": "–°–æ–∫ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π",
                "description": "–°–≤–µ–∂–µ–≤—ã–∂–∞—Ç—ã–π –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫",
                "price": 150,
                "category_id": categories[3].id,
                "ingredients": "–ê–ø–µ–ª—å—Å–∏–Ω—ã",
                "allergens": "–ù–µ—Ç",
                "weight": "250–º–ª",
                "calories": 110,
                "image_url": None,
                "is_available": True
            }
        ]
        
        for item_data in menu_items_data:
            menu_item = MenuItemModel(
                id=generate_id(),
                name=item_data["name"],
                description=item_data["description"],
                price=item_data["price"],
                category_id=item_data["category_id"],
                ingredients=item_data["ingredients"],
                allergens=item_data["allergens"],
                weight=item_data["weight"],
                calories=item_data["calories"],
                image_url=item_data["image_url"],
                is_available=item_data["is_available"]
            )
            session.add(menu_item)
        
        await session.commit()
        print("‚úÖ Menu items added successfully")
        print(f"‚úÖ Added {len(categories)} categories and {len(menu_items_data)} menu items")


if __name__ == "__main__":
    asyncio.run(add_test_data())